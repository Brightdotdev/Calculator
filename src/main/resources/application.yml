server:
  port: 8104
  forward-headers-strategy: framework


spring :
  main:
    lazy-initialization: true
  application:
    name: loggingService
  autoconfigure :
    exclude :
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
  data :
    mongodb:
      auto-index-creation : true
      uri : mongodb://localhost:27017/logging_mongo_db
  rabbitmq:
    host: localhost
    port: 5672
    username: bright
    password: secret123
    listener:
      simple:
        default-requeue-rejected: false  # Don?t keep retrying forever
        retry:
          enabled: true
          max-attempts: 3
          initial-interval: 1000
          multiplier: 2.0
          max-interval: 10000




messaging:
  type: webClient



auth:
  api:
    key : internalKey
  jwt:
    secret: 431da76bdce7104b0a69902ede07459b0087f110d969fb15fef07afc899012ac07bc3435d063f8619c1523d917e84024ee8784c3f2e619c1efb770d86221bf35
    expiration: 604800000
    issuer: auth-service


external:
  services:
    vehicle:
      base-url: http://localhost:8106
    dispatch:
      base-url: http://localhost:8105

logging:
  level:
    org.springframework.amqp: WARN
    com.rabbitmq: WARN
    org.springframework.security: DEBUG
    com.example.logging-tracking-service: DEBUG




resilience4j:
  circuitbreaker:
    instances:
      myServiceCircuitBreaker:
        registerHealthIndicator: true
        slidingWindowSize: 15
        minimumNumberOfCalls: 10
        failureRateThreshold: 80
        waitDurationInOpenState: 22s
        permittedNumberOfCallsInHalfOpenState: 7
        automaticTransitionFromOpenToHalfOpenEnabled: true